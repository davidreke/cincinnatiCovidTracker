[{"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\index.js":"1","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\reportWebVitals.js":"2","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\App.js":"3","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\header.js":"4","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\Header.js":"5","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\Body.js":"6","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\NewCases.js":"7","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\graphComponents\\NewCasesGraph.js":"8","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\Selector.js":"9","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\functions\\fetches.js":"10"},{"size":545,"mtime":1610035551254,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":522,"mtime":1611012418622,"results":"14","hashOfConfig":"12"},{"size":254,"mtime":1610034814643,"results":"15","hashOfConfig":"12"},{"size":254,"mtime":1610034814643,"results":"16","hashOfConfig":"12"},{"size":567,"mtime":1610399449547,"results":"17","hashOfConfig":"12"},{"size":4138,"mtime":1611012356275,"results":"18","hashOfConfig":"12"},{"size":9641,"mtime":1610983420691,"results":"19","hashOfConfig":"12"},{"size":5076,"mtime":1610983525686,"results":"20","hashOfConfig":"12"},{"size":9232,"mtime":1611012337600,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1kakcbu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\index.js",[],["44","45"],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\reportWebVitals.js",[],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\App.js",[],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\header.js",[],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\Header.js",[],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\Body.js",[],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\NewCases.js",["46","47"],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\graphComponents\\NewCasesGraph.js",["48","49"],"import React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { transition } from \"d3-transition\";\r\n\r\nexport default class NewCasesGraph extends Component {\r\n  componentDidUpdate = (prevProps) => {\r\n    if (!prevProps.input.length) {\r\n      this.createGraph(this.props.input);\r\n    } else {\r\n      if (!prevProps.input !== this.props.input) {\r\n        d3.selectAll('svg')\r\n            .remove()\r\n\r\n        this.createGraph(this.props.input);\r\n        // this.updateGraph(this.props.input)\r\n      }\r\n    }\r\n  };\r\n\r\n  getTransition(duration) {\r\n    return transition()\r\n      .duration(duration);\r\n}\r\n\r\n  // componentDidMount = () => {\r\n  //     console.log(this.props.input)\r\n  //     if(this.props.input.length > 0){\r\n  //         this.createGraph(this.props.input)\r\n  //     }\r\n\r\n  // }\r\n\r\n  handleMouseOver = (event, d) =>{\r\n      d3.select(event.currentTarget)\r\n        .transition()\r\n        .duration(200)\r\n        .attr(\"fill\", \"#334040\");\r\n  }\r\n\r\n    handleMouseOut = (event, d) => {\r\n  d3.select(event.currentTarget)\r\n    .transition()\r\n    .duration(300)\r\n    .attr(\"fill\", \"#5FA19E\");\r\n};\r\n\r\n\r\n  createGraph(data) {\r\n    // console.log('CreateGraph Data: ', data);\r\n\r\n    // tween\r\n    const widthTween = (d) => {\r\n      let i = d3.interpolate(0, graphHeight / data.length);\r\n\r\n      return function (t) {\r\n        return i(t);\r\n      };\r\n    };\r\n\r\n    // dimensions\r\n    const dimensions = {\r\n      height: 500,\r\n      width: 1000,\r\n    };\r\n\r\n    const margin = { top: 20, right: 20, bottom: 100, left: 100 };\r\n\r\n    const svg = d3\r\n      .select(\".canvas\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", dimensions.width)\r\n      .attr(\"height\", dimensions.height);\r\n\r\n    const graphWidth = dimensions.width - margin.left - margin.right;\r\n    const graphHeight = dimensions.height - margin.top - margin.bottom;\r\n\r\n    // create graph\r\n    const graph = svg\r\n      .append(\"g\")\r\n      .attr(\"width\", graphWidth)\r\n      .attr(\"height\", graphHeight)\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n      .attr(\"class\", \"graph\");\r\n\r\n    // console.log(graph);\r\n    // line path element\r\n    const path = graph.append(\"path\");\r\n\r\n    const xAxisGroup = graph\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${graphHeight})`)\r\n      .attr(\"class\", \"xAxisGroup\");\r\n\r\n    // set x axis text\r\n    xAxisGroup\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"rotate(-40)\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\");\r\n\r\n    const yAxisGroup = graph.append(\"g\").attr(\"class\", \"yAxisGroup\");\r\n\r\n    // d3 line generator\r\n    const line = d3\r\n      .line()\r\n      .x(function (d) {\r\n        return x(d[0]);\r\n      })\r\n      .y(function (d) {\r\n        return y(d[2]);\r\n      });\r\n\r\n    // create y scale\r\n    const y = d3.scaleLinear().range([graphHeight, 0]);\r\n\r\n    // create a band scale\r\n    const x = d3.scaleTime().range([0, graphWidth]);\r\n    // .paddingInner(0.2)\r\n    // .paddingOuter(0.2);\r\n\r\n    // create the axae\r\n    const xAxis = d3\r\n      .axisBottom(x)\r\n      .ticks(5)\r\n      .tickFormat(d3.timeFormat(\"%B %d %Y\"));\r\n\r\n    const yAxis = d3\r\n      .axisLeft(y)\r\n      .ticks(4)\r\n      .tickFormat((d) => `${d.toLocaleString()} cases`);\r\n\r\n    const t = this.getTransition(750);\r\n\r\n    // console.log(\"create graph graph: \", graph);\r\n    //  join data to rects\r\n    const rects = graph.selectAll(\"rect\").data(data);\r\n\r\n    // remove exit selection\r\n    rects.exit().remove();\r\n\r\n    // update any scales (domains)\r\n    y.domain([0, d3.max(data, (d) => d[1])]);\r\n    x.domain([data[0][0], data[data.length - 1][0]]);\r\n\r\n    // update path data\r\n    path\r\n      .data([data])\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#334040\")\r\n      .attr(\"stroke-width\", \"2\")\r\n      .attr(\"d\", line);\r\n\r\n    // update current shapes in the dom\r\n    rects\r\n      .attr(\"width\", graphWidth / data.length)\r\n      .attr(\"fill\", \"#5FA19E\")\r\n      .attr(\"x\", (d) => x(d[0]));\r\n\r\n    //handle enter selection\r\n    // append the enter section to the DOM\r\n    rects\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"width\", 0)\r\n      .attr(\"height\", 0)\r\n      .attr(\"y\", graphHeight)\r\n      .attr(\"fill\", \"#5FA19E\")\r\n      .attr(\"x\", (d) => {\r\n        // console.log(d[0])\r\n        return x(d[0]);\r\n      })\r\n      .merge(rects)\r\n      .transition(t)\r\n      .attrTween(\"width\", widthTween)\r\n      .attr(\"y\", (d) => {\r\n        return y(d[1]);\r\n      })\r\n      .attr(\"height\", (d) => {\r\n        // console.log(graphHeight - y(d[1]))\r\n        return graphHeight - y(d[1]);\r\n      })\r\n\r\n      //   add mouseover and mousout\r\n      graph.selectAll('rect')\r\n      .on(\"mouseover\", (event, d) => {\r\n        let content = `<div class=\"tooltip-label\">${\r\n          d[0].getMonth() + 1\r\n        }/${d[0].getDate()}/${d[0].getFullYear()}: ${d[1]} New cases</div>`;\r\n        tip.html(content).style(\"visibility\", \"visible\");\r\n        this.handleMouseOver(event, d);\r\n      })\r\n      .on(\"mouseout\", (event, d) => {\r\n        tip.style(\"visibility\", \"hidden\");\r\n        this.handleMouseOut(event, d);\r\n      })\r\n      .on(\"mousemove\", (event, d) => {\r\n        tip.style(\"transform\", `translate(${event.pageX}px,${event.pageY}px)`);\r\n      });\r\n\r\n    // call axae\r\n    xAxisGroup.call(xAxis);\r\n    yAxisGroup.call(yAxis);\r\n\r\n    // add tips\r\n    const tip = d3\r\n      .select(\"body\")\r\n      .append(\"div\")\r\n      .attr(\"class\", \"card\")\r\n      .style(\"padding\", \"8px\") // Add some padding so the tooltip content doesn't touch the border of the tooltip\r\n      .style(\"position\", \"absolute\") // Absolutely position the tooltip to the body. Later we'll use transform to adjust the position of the tooltip\r\n      .style(\"left\", 0)\r\n      .style(\"top\", 0)\r\n      .style(\"visibility\", \"hidden\");\r\n  }\r\n\r\n  updateGraph(data) {\r\n    console.log(\"UpdateGraph Data: \", data);\r\n\r\n    // tween\r\n    const widthTween = (d) => {\r\n      let i = d3.interpolate(0, graphHeight / data.length);\r\n\r\n      return function (t) {\r\n        return i(t);\r\n      };\r\n    };\r\n\r\n    // dimensions\r\n    const dimensions = {\r\n      height: 500,\r\n      width: 1000,\r\n    };\r\n\r\n    const margin = { top: 20, right: 20, bottom: 100, left: 100 };\r\n\r\n    const svg = d3\r\n      .select(\".canvas\")\r\n      .select(\"svg\")\r\n      .attr(\"width\", dimensions.width)\r\n      .attr(\"height\", dimensions.height);\r\n\r\n    const graphWidth = dimensions.width - margin.left - margin.right;\r\n    const graphHeight = dimensions.height - margin.top - margin.bottom;\r\n\r\n    // select graph\r\n    const graph = svg\r\n      .selectAll(\"g\")\r\n      .attr(\"width\", graphWidth)\r\n      .attr(\"height\", graphHeight)\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    // console.log(graph);\r\n\r\n    // line path element\r\n    const path = graph.select(\"path\");\r\n\r\n    const xAxisGroup = graph\r\n      .select(\"g.xAxisGroup\")\r\n      .attr(\"transform\", `translate(0, ${graphHeight})`);\r\n\r\n    // set x axis text\r\n    xAxisGroup\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"rotate(-40)\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\");\r\n\r\n    const yAxisGroup = graph.select(\"g.yAxisGroup\");\r\n\r\n    // d3 line generator\r\n    const line = d3\r\n      .line()\r\n      .x(function (d) {\r\n        return x(d[0]);\r\n      })\r\n      .y(function (d) {\r\n        return y(d[2]);\r\n      });\r\n\r\n    // create y scale\r\n    const y = d3.scaleLinear().range([graphHeight, 0]);\r\n\r\n    // create a band scale\r\n    const x = d3.scaleTime().range([0, graphWidth]);\r\n    // .paddingInner(0.2)\r\n    // .paddingOuter(0.2);\r\n\r\n    // create the axae\r\n    const xAxis = d3\r\n      .axisBottom(x)\r\n      .ticks(5)\r\n      .tickFormat(d3.timeFormat(\"%B %d %Y\"));\r\n\r\n    const yAxis = d3\r\n      .axisLeft(y)\r\n      .ticks(4)\r\n      .tickFormat((d) => `${d.toLocaleString()} cases`);\r\n\r\n    const t = this.getTransition(750);\r\n\r\n    console.log(\"update graph graph\", graph);\r\n\r\n    //  join data to rects\r\n    const rects = graph.selectAll(\"rect\").data(data);\r\n\r\n    // remove exit selection\r\n    rects.exit().remove();\r\n\r\n    // update any scales (domains)\r\n    y.domain([0, d3.max(data, (d) => d[1])]);\r\n    x.domain([data[0][0], data[data.length - 1][0]]);\r\n\r\n    // update path data\r\n    path\r\n      .data([data])\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#334040\")\r\n      .attr(\"stroke-width\", \"2\")\r\n      .attr(\"d\", line);\r\n\r\n    // update current shapes in the dom\r\n    rects\r\n      .attr(\"width\", graphWidth / data.length)\r\n      .attr(\"fill\", \"#5FA19E\")\r\n      .attr(\"x\", (d) => x(d[0]));\r\n\r\n    //handle enter selection\r\n    // append the enter section to the DOM\r\n    /* rects\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"width\", 0)\r\n      .attr(\"height\", 0)\r\n      .attr(\"y\", graphHeight)\r\n      .attr(\"fill\", \"#5FA19E\")\r\n      .attr(\"x\", (d) => x(d[0]))\r\n      .merge(rects)\r\n      .transition(t)\r\n      .attrTween(\"width\", widthTween)\r\n      .attr(\"y\", (d) => {\r\n        return y(d[1]);\r\n      })\r\n      .attr(\"height\", (d) => {\r\n        // console.log(graphHeight - y(d[1]))\r\n        return graphHeight - y(d[1]);\r\n      }); */\r\n    rects\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"width\", 10)\r\n      .attr(\"fill\", \"#5FA19E\")\r\n      .attr(\"x\", (d) => x(d[0]))\r\n      .attr(\"y\", (d) => y(d[1]))\r\n      .attr(\"height\", (d) => graphHeight - y(d[1]))\r\n    //   .merge(rects);\r\n      \r\n\r\n    // add mouseOver\r\n    // graph.selectAll('rect')\r\n    //     .on('mouseover',(event, d) =>{\r\n\r\n    //     })\r\n\r\n    // call axae\r\n    xAxisGroup.call(xAxis);\r\n    yAxisGroup.call(yAxis);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"canvas\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\components\\Selector.js",[],"C:\\Users\\David\\Documents\\coding projects\\2020jobHunt\\sideProjects\\cincinnati-covid\\src\\functions\\fetches.js",["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"76","line":28,"column":9,"nodeType":"74","messageId":"75","endLine":28,"endColumn":13},{"ruleId":"72","severity":1,"message":"77","line":220,"column":11,"nodeType":"74","messageId":"75","endLine":220,"endColumn":21},{"ruleId":"72","severity":1,"message":"78","line":299,"column":11,"nodeType":"74","messageId":"75","endLine":299,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":84,"column":25,"nodeType":"81","messageId":"82","endLine":84,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":131,"column":54,"nodeType":"81","messageId":"82","endLine":131,"endColumn":56},{"ruleId":"79","severity":1,"message":"80","line":132,"column":54,"nodeType":"81","messageId":"82","endLine":132,"endColumn":56},{"ruleId":"79","severity":1,"message":"80","line":133,"column":53,"nodeType":"81","messageId":"82","endLine":133,"endColumn":55},{"ruleId":"79","severity":1,"message":"80","line":135,"column":56,"nodeType":"81","messageId":"82","endLine":135,"endColumn":58},{"ruleId":"79","severity":1,"message":"80","line":137,"column":53,"nodeType":"81","messageId":"82","endLine":137,"endColumn":55},{"ruleId":"79","severity":1,"message":"80","line":150,"column":55,"nodeType":"81","messageId":"82","endLine":150,"endColumn":57},{"ruleId":"79","severity":1,"message":"80","line":151,"column":57,"nodeType":"81","messageId":"82","endLine":151,"endColumn":59},{"ruleId":"79","severity":1,"message":"80","line":152,"column":58,"nodeType":"81","messageId":"82","endLine":152,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":154,"column":58,"nodeType":"81","messageId":"82","endLine":154,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":156,"column":55,"nodeType":"81","messageId":"82","endLine":156,"endColumn":57},{"ruleId":"79","severity":1,"message":"80","line":158,"column":56,"nodeType":"81","messageId":"82","endLine":158,"endColumn":58},{"ruleId":"79","severity":1,"message":"80","line":160,"column":59,"nodeType":"81","messageId":"82","endLine":160,"endColumn":61},{"ruleId":"79","severity":1,"message":"80","line":184,"column":59,"nodeType":"81","messageId":"82","endLine":184,"endColumn":61},{"ruleId":"79","severity":1,"message":"80","line":186,"column":62,"nodeType":"81","messageId":"82","endLine":186,"endColumn":64},{"ruleId":"79","severity":1,"message":"80","line":188,"column":58,"nodeType":"81","messageId":"82","endLine":188,"endColumn":60},{"ruleId":"83","severity":1,"message":"84","line":192,"column":93,"nodeType":"85","messageId":"86","endLine":192,"endColumn":107,"fix":"87"},{"ruleId":"79","severity":1,"message":"80","line":240,"column":19,"nodeType":"81","messageId":"82","endLine":240,"endColumn":21},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'widthTween' is assigned a value but never used.","'t' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-whitespace-before-property","Unexpected whitespace before property i.","MemberExpression","unexpectedWhitespace",{"range":"90","text":"91"},"no-global-assign","no-unsafe-negation",[7545,7546],""]